com.anfelisa.todo

target JAVA

models {
	schema public
	
	persistent Todo {
		primitiveAttributes {
			Unique PrimaryKey NotNull Serial id
			NotNull String description
			NotNull Boolean done
			DateTime createdDateTime
			DateTime updatedDateTime
		}
	}
	
	persistent TodoHistory {
		primitiveAttributes {
			Unique PrimaryKey NotNull Serial id
			Integer todoId
			String description
			Boolean done
			NotNull Boolean deleted
			DateTime changedTime
			NotNull String action
		}
	}
	
	persistent Bug {
		primitiveAttributes {
			Unique PrimaryKey NotNull Serial id
			NotNull String description
			NotNull String timeline
			NotNull String reporter
			NotNull Boolean resolved
			DateTime createdDateTime
			DateTime updatedDateTime
			NotNull String serverVersion
			NotNull String clientVersion
			NotNull String device
		}
	}
	
	TodoList {
		complexAttributes {
			List Todo todoList
		}
	}
	
	TodoId {
		primitiveAttributes {
			NotNull Serial id
		}
	}

	TodoToggle {
		primitiveAttributes {
			NotNull Serial id
			DateTime updatedDateTime
		}
	}

	ToggleAll {
		primitiveAttributes {
			NotNull Boolean done
			DateTime updatedDateTime
		}
	}
	
}

data {
	TodoList : ( TodoList )
	Todo : ( Todo )
	TodoId : ( TodoId )
	TodoToggle : ( TodoToggle )
	ToggleAll : ( ToggleAll )
	ClearDone : (  )
	TodoHistory : ( TodoHistory )
}

actions {
	GET GetAllTodos uses TodoList
	POST CreateTodo uses Todo executes CreateTodo
	PUT ToggleTodo uses TodoToggle executes ToggleTodo
	PUT ToggleAll uses ToggleAll executes ToggleAll
	PUT UpdateTodo uses Todo executes UpdateTodo
	DELETE DeleteTodo uses TodoId executes DeleteTodo
	DELETE ClearDone uses ClearDone executes ClearDone
}

commands {
	CreateTodo uses Todo {
		on success publishes (CreateTodo)
	}
	ToggleTodo uses TodoToggle {
		on success publishes (ToggleTodo)
	}
	ToggleAll uses ToggleAll {
		on success publishes (ToggleAll)
	}
	UpdateTodo uses Todo {
		on success publishes (UpdateTodo)
	}
	DeleteTodo uses TodoId {
		on success publishes (DeleteTodo)
	}
	ClearDone uses ClearDone {
		on success publishes (ClearDone)
	}
}

events {
	CreateTodo uses Todo listenedToBy ( Todo.create TodoHistory.create )
	ToggleTodo uses TodoToggle listenedToBy ( Todo.toggle TodoHistory.toggle )
	ToggleAll uses ToggleAll listenedToBy ( Todo.toggleAll TodoHistory.toggleAll )
	UpdateTodo uses Todo listenedToBy ( Todo.update TodoHistory.update )
	DeleteTodo uses TodoId listenedToBy ( TodoHistory.delete Todo.delete  )
	ClearDone uses ClearDone listenedToBy ( TodoHistory.clearDone Todo.clearDone )
}

views {
	Todo {
		create(Todo)
		toggle(TodoToggle)
		toggleAll(ToggleAll)
		delete(TodoId)
		update(Todo)
		clearDone(ClearDone)
	}
	external TodoHistory {
		create(Todo)
		toggle(TodoToggle)
		toggleAll(ToggleAll)
		delete(TodoId)
		update(Todo)
		clearDone(ClearDone)
	}
}
